Vagrant.configure("2") do |config|
  # OS
  config.vm.box = "perk/ubuntu-2204-arm64"

  # Provider
  config.vm.provider "qemu" do |qe|
    qe.ssh_port = "50022" # change ssh port as needed
    
    # Dynamic QEMU path resolution
    qemu_dir = nil
    
    # Method 1: Try environment variable first (highest priority)
    if ENV['VAGRANT_QEMU_DIR'] && !ENV['VAGRANT_QEMU_DIR'].empty?
      qemu_dir = ENV['VAGRANT_QEMU_DIR']
      puts "Using QEMU from environment variable: #{qemu_dir}"
    end
    
    # Method 2: Try to find via 'which' command
    if qemu_dir.nil? || qemu_dir.empty?
      qemu_binary = `which qemu-system-aarch64 2>/dev/null`.strip
      if !qemu_binary.empty?
        # Extract base path from binary location
        # /nix/store/xxx-qemu-10.0.2/bin/qemu-system-aarch64 -> /nix/store/xxx-qemu-10.0.2/share/qemu
        potential_dir = File.join(File.dirname(File.dirname(qemu_binary)), "share", "qemu")
        if File.directory?(potential_dir)
          qemu_dir = potential_dir
          puts "Found QEMU via system path: #{qemu_dir}"
        end
      end
    end
    
    # Method 3: Try nix eval if available (for Nix users)
    if (qemu_dir.nil? || qemu_dir.empty?) && system("command -v nix > /dev/null 2>&1")
      begin
        nix_path = `nix eval --raw nixpkgs#qemu.outPath 2>/dev/null`.strip
        if !nix_path.empty?
          potential_dir = File.join(nix_path, "share", "qemu")
          if File.directory?(potential_dir)
            qemu_dir = potential_dir
            puts "Found QEMU via Nix: #{qemu_dir}"
          end
        end
      rescue
        # Nix command failed, continue to next method
      end
    end
    
    # Method 4: Search common locations as fallback
    if qemu_dir.nil? || qemu_dir.empty?
      common_paths = [
        "/opt/homebrew/share/qemu",           # Homebrew on macOS ARM
        "/usr/local/share/qemu",               # Homebrew on macOS Intel or manual installs
        "/usr/share/qemu",                     # System package manager
        "/usr/share/qemu-kvm"                  # Some Linux distributions
      ]
      
      common_paths.each do |path|
        if File.directory?(path)
          qemu_dir = path
          puts "Found QEMU at common location: #{qemu_dir}"
          break
        end
      end
    end
    
    # Apply the discovered path or show error
    if qemu_dir && File.directory?(qemu_dir)
      qe.qemu_dir = qemu_dir
      puts "✓ QEMU directory configured: #{qemu_dir}"
    else
      puts "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
      puts "⚠ WARNING: Could not automatically find QEMU directory!"
      puts ""
      puts "Please install QEMU or set the VAGRANT_QEMU_DIR environment variable:"
      puts "  export VAGRANT_QEMU_DIR=/path/to/qemu/share/qemu"
      puts ""
      puts "For Nix users:"
      puts "  export VAGRANT_QEMU_DIR=$(dirname $(dirname $(which qemu-system-aarch64)))/share/qemu"
      puts "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
      
      # Attempt to continue anyway - Vagrant might have its own defaults
    end
  end

  # Apt update
  config.vm.provision "shell", inline: "sudo apt-get update -y", run: "once"
end
